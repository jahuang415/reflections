Q: How did viewing a diff between two versions of a file help you see the bug that was introduced?

A: I was able to look at the exact lines that had the difference. It makes it much easier to see the problem spots where there were typos or maybe egregious programmatic coding errors.

Q: How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

A: You can easily look through time at how you did things right or wrong. You can see exactly where you changed things and maybe when things started breaking.

Q: What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

A: Pros are that you can make logical commits, which make reviewing previous versions easier and more logical. Cons are that you might make bad judgment calls, or forget to commit after a long time.

Q: Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

A: Different use cases. Git is used primarily for coding, Google Docs is mostly used for atomic documents, ones that don't have dependencies or other interrelated aspects.

Q: How can you use the commands git log and git diff to view the history of files?

A: Git log shows the various commits and their associated messages. Git diff allows you to track the differences between the different versions.

Q: How might using version control make you more confident to make changes that could break something?

A: You can always revert back if you need to, and git helps you to find where you introduced the problem.

Q: Now that you have your workspace set up, what do you want to try using Git for?

A: Personal portfolio website.


